"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


REDIS_HOST = os.getenv("REDIS_HOST", "localhost")  # 默认值为 localhost
REDIS_PORT = os.getenv("REDIS_PORT", "6379")  # 默认 Redis 端口
REDIS_PASSWORD = os.getenv("REDIS_PASSWORD", "")  # 默认没有密码

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",  # 使用 django-redis
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}/1",  # Redis 服务的 URL
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": REDIS_PASSWORD,  # 传入密码（如果有的话）
        },
    }
}

# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         # The hostname in LOCATION is the primary (service / master) name
#         "LOCATION": "redis://master/0",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.SentinelClient",
#             "SENTINELS": [
#                 ("120.55.57.128", 26379),
#                 ("120.55.57.128", 26380),
#                 ("120.55.57.128", 26381),
#             ],
#             "SENTINEL_MASTER_NAME": "master",
#             "PASSWORD": "123qwe",
#             "SOCKET_CONNECT_TIMEOUT": 2,
#             "SOCKET_TIMEOUT": 2,
#             "CONNECTION_POOL_CLASS": "redis.sentinel.SentinelConnectionPool",
#             "CONNECTION_FACTORY": "django_redis.pool.SentinelConnectionFactory",
#         },
#     }
# }

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-ij01_tbf+r#%fv%x#uf32aid9hfy#$t)=$@3ox1b80qhaze(dh"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["117.72.175.93", "localhost", "0.0.0.0", "django-service"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "blog",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "blog.middleware.MetricsMiddleWare",
]

ROOT_URLCONF = "mysite.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mysite.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.mysql",
#         "NAME": "mydb",
#         "USER": "django_user",
#         "PASSWORD": "password",
#         "HOST": "117.72.175.93",
#         "PORT": "3307",
#     }
# }

DATABASE_HOST = os.getenv("DATABASE_HOST", "localhost")  # 默认值为localhost
DATABASE_NAME = os.getenv("DATABASE_NAME", "mydb")
DATABASE_USER = os.getenv("DATABASE_USER", "root")
DATABASE_PASSWORD = os.getenv("DATABASE_PASSWORD", "password")

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",  # 使用 MySQL 数据库
        "NAME": DATABASE_NAME,  # 使用环境变量中的数据库名
        "USER": DATABASE_USER,  # 使用环境变量中的用户名
        "PASSWORD": DATABASE_PASSWORD,  # 使用环境变量中的密码
        "HOST": DATABASE_HOST,  # 使用环境变量中的主机地址
        "PORT": "3306",  # MySQL 默认端口
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
